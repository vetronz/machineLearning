
Practical 1: reconstructing genomes from sequencing data

--------------

source ("../Notebooks/Data/functions.R")

A)

P(G=AA|D) = P(D|G=AA) * P(G=AA) / ( P(D|G=AA) * P(G=AA) + P(D|G=AA) * P(G=AA) + P(D|G=AG) * P(G=GG) )

B) uniform prior:  P(G=AA) = P(G=AT) = P(G=TT) = 1/3

likes <- calcGenoLikes("AAAG", "A", "G", 0.01, FALSE)
priors_B <- rep(1/3, 3)
posteriors_B <- likes * priors_B / sum(likes * priors_B)

C) HWE-based prior assuming a frequency of G of 0.1
f <- 0.1
priors_C <- c( (1-f)^2, 2*f*(1-f), f^2 )
posteriors_C <- likes * priors_C / sum(likes * priors_C)

D) Inbreeding of I=0.2
I <- 0.2
priors_D <- c( (1-f)^2 + I*f*(1-f), 2*f*(1-f) * (1-I), f^2 + I*f*(1-f))
posteriors_D <- likes * priors_D / sum(likes * priors_D)

E) Inbreeding and higher error rate 0.05
likes_E <- calcGenoLikes("AAAG", "A", "G", 0.05, FALSE)
posteriors_E <- likes_E * priors_D / sum(likes_E * priors_D)

F) plot
posteriors <- matrix(c(posteriors_B, posteriors_C, posteriors_D, posteriors_E), ncol=3, nrow=4, byrow=T)
barplot(posteriors, beside=T, legend.text=toupper(letters[2:5]), names=c("AA","AG","GG"), ylab="Posterior probability", xlab="Genotype")

G) more data
bases <- "AAAGAGAAAAAAAGGGGGAAAGGA"
likes_G <- calcGenoLikes(bases, "A", "G", 0.05, FALSE)
posteriors_G <- likes_G * priors_C / sum(likes_G  * priors_C)

H) a lot of data

bases <- paste(c(rep("A",1e3),rep("G",1e3)), sep="", collapse="")
loglikes_H <- calcGenoLikes(bases, "A", "G", 0.05, TRUE)

# if you want to calculate proper probability (in log) you have to approximate the sum of logs, see https://en.wikipedia.org/wiki/List_of_logarithmic_identities





